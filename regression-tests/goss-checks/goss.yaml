{{$domain_name_chapter_b := getEnv "DOMAIN_NAME_CHAPTER_B" "exercise.jumpingcrab.com"}}

command:

  A.1 Test 1:
    title: "Exercise A.1: GET request without giving a truststore should complain about untrusted issuer"
    exec: "curl https://localhost:11443/index.html"
    exit-status: 60
    stdout: []
    stderr:
    - "curl: (60) "
    timeout: 10000 # in milliseconds

  A.1 Test 2:
    title: "Exercise A.1: GET request with explicit truststore should complain about non matching CN"
    exec: "curl --cacert /home/vagrant/example.com.crt https://localhost:11443/index.html"
    exit-status: 51
    stdout: []
    stderr:
    - "curl: (51) "
    timeout: 10000 # in milliseconds

  A.2 Test 1:
    title: "Exercise A.2: GET request with explicit truststore should return content of VirtualHost A.2"
    exec: "curl --cacert /home/vagrant/localhost.crt https://localhost:12443/index.html"
    exit-status: 0
    stdout:
    - "Hello World"
    - "(you connected to webspace of exercise A.2)"
    stderr: []
    timeout: 10000 # in milliseconds

  A.2 Test 2:
    title: "Exercise A.2: localhost.keystore.p12 should contain a certificate and a key"
    exec: "openssl pkcs12 -in /home/vagrant/localhost.keystore.p12 -nodes -passin pass:test"
    exit-status: 0
    stdout:
    - "-----BEGIN CERTIFICATE-----"
    - "-----BEGIN PRIVATE KEY-----"
    stderr: []
    timeout: 10000 # in milliseconds

  A.2 Test 3:
    title: "Exercise A.2: localhost.truststore.p12 should contain a certificate and no key"
    exec: "openssl pkcs12 -in /home/vagrant/localhost.truststore.p12 -nodes -passin pass:test"
    exit-status: 0
    stdout:
    - "-----BEGIN CERTIFICATE-----"
    - "!-----BEGIN PRIVATE KEY-----"
    stderr: []
    timeout: 10000 # in milliseconds

  A.3 Test 1:
    title: "Exercise A.3: GET request with explicit CA truststore should return content of VirtualHost A.3"
    exec: "curl --cacert /home/vagrant/ca/cacert.pem https://localhost:13443/index.html"
    exit-status: 0
    stdout:
    - "Hello World"
    - "(you connected to webspace of exercise A.3)"
    stderr: []
    timeout: 10000 # in milliseconds

  A.3 Test 2:
    title: "Exercise A.3: server.keystore.p12 should contain a certificate and a key"
    exec: "openssl pkcs12 -in /home/vagrant/server.keystore.p12 -nodes -passin pass:test"
    exit-status: 0
    stdout:
    - "-----BEGIN CERTIFICATE-----"
    - "-----BEGIN PRIVATE KEY-----"
    stderr: []
    timeout: 10000 # in milliseconds

  A.3 Test 3:
    title: "Exercise A.3: truststore.ca.p12 should contain a certificate and no key"
    exec: "openssl pkcs12 -in /home/vagrant/ca/truststore.ca.p12 -nodes -passin pass:test"
    exit-status: 0
    stdout:
    - "-----BEGIN CERTIFICATE-----"
    - "!-----BEGIN PRIVATE KEY-----"
    stderr: []
    timeout: 10000 # in milliseconds

  A.4 Test 1:
    title: "Exercise A.4: GET request authenticated with client certificat should return content of VirtualHost A.4"
    exec: "curl --cacert /home/vagrant/ca/cacert.pem --cert /home/vagrant/client.crt --key /home/vagrant/client.key https://localhost:14443/index.html"
    exit-status: 0
    stdout:
    - "This content is only displayed if you authenticate successfully by a client certificate!"
    - "(you connected to webspace of exercise A.4)"
    stderr: []
    timeout: 10000 # in milliseconds

  A.4 Test 2:
    title: "Exercise A.4: GET request without client certificate should complain about no client certificate"
    exec: "curl --cacert /home/vagrant/ca/cacert.pem https://localhost:14443/index.html"
    exit-status: 56
    stdout: []
    stderr:
    - "curl: (56) "
    timeout: 10000 # in milliseconds

  A.4 Test 3:
    title: "Exercise A.4: client.keystore.p12 should contain a certificate and a key"
    exec: "openssl pkcs12 -in /home/vagrant/client.keystore.p12 -nodes -passin pass:test"
    exit-status: 0
    stdout:
    - "-----BEGIN CERTIFICATE-----"
    - "-----BEGIN PRIVATE KEY-----"
    stderr: []
    timeout: 10000 # in milliseconds

  A.5 Test 1:
    title: "Exercise A.5: server.crt should contain a server certificate (client flag not set, CA:false)"
    exec: "openssl x509 -in /home/vagrant/server.crt -noout -text"
    exit-status: 0
    stdout:
    - "Certificate:"
    - "CA:FALSE"
    - "TLS Web Server Authentication"
    - "!TLS Web Client Authentication"
    - "!E-mail Protection"
    stderr: []
    timeout: 10000 # in milliseconds

  A.5 Test 2:
    title: "Exercise A.5: server.csr should contain a CSR"
    exec: "openssl req -in /home/vagrant/server.csr -noout -text"
    exit-status: 0
    stdout:
    - "Certificate Request:"
    stderr: []
    timeout: 10000 # in milliseconds

  A.5 Test 3:
    title: "Exercise A.5: server.crt should be verifiable against CA certificate"
    exec: "openssl verify -CAfile /home/vagrant/ca/cacert.pem /home/vagrant/server.crt"
    exit-status: 0
    stdout:
    - "server.crt: OK"
    stderr: []
    timeout: 10000 # in milliseconds

  A.5 Test 3:
    title: "Exercise A.5: TLS connect to port 13443 should complain about unverifyed first cert"
    exec: "openssl s_client -connect localhost:13443 </dev/null"
    exit-status: 0
    stdout:
    - "Verify return code: 21"
    stderr: []
    timeout: 10000 # in milliseconds

  A.5 Test 4:
    title: "Exercise A.5: TLS connect to port 21443 should be fully verified"
    exec: 'openssl s_client -connect {{$domain_name_chapter_b}}:21443 </dev/null'
    exit-status: 0
    stdout:
    - "Verify return code: 0"
    stderr: []
    timeout: 10000 # in milliseconds

  B.1 Test 1:
    title: "Exercise B.1: GET request without explicit truststrore should return content of VirtualHost B.1"
    exec: 'curl https://{{$domain_name_chapter_b}}:21443/index.html'
    exit-status: 0
    stdout:
    - "Hello Real World"
    - "(you connected to webspace of exercise B.1)"
    stderr: []
    timeout: 10000 # in milliseconds

  B.2 Test 1:
    title: "Exercise B.2: GET request with client certificate should return content of VirtualHost B.2"
    exec: 'curl --cert /home/vagrant/clientcrt/fullchain1.pem --key /home/vagrant/clientcrt/privkey1.pem https://{{$domain_name_chapter_b}}:22443/index.html'
    exit-status: 0
    stdout:
    - "This content is only displayed if you authenticate successfully by a client certificate!"
    - "(you connected to webspace of exercise B.2)"
    stderr: []
    timeout: 10000 # in milliseconds

  B.2 Test 2:
    title: "Exercise B.2: GET request without client certificate should complain about no client certificate"
    exec: 'curl https://{{$domain_name_chapter_b}}:22443/index.html'
    exit-status: 56
    stdout: []
    stderr:
    - "curl: (56) "
    timeout: 10000 # in milliseconds

  B.3 Test 1:
    title: "Exercise B.3: CRL referenced by the github.com certifcate should be a valid CRL"
    exec: 'openssl crl -in /tmp/crl.for.github.com.crl -inform der -noout -text'
    exit-status: 0
    stdout:
    - "Certificate Revocation List (CRL):"
    - "Last Update:"
    - "Next Update:"
    - "Revoked Certificates:"
    stderr: []
    timeout: 10000 # in milliseconds

  B.3 Test 2:
    title: "Exercise B.3: OCSP request should result in: Response verify OK"
    exec: 'openssl ocsp -issuer /tmp/github.com.chain.pem -cert /tmp/github.com.pem -text -url $(openssl x509 -in /tmp/github.com.pem -noout -ocsp_uri)'
    exit-status: 0
    stdout:
    - "OCSP Request Data:"
    - "OCSP Response Data:"
    - "/tmp/github.com.pem: good"
    - "This Update:"
    - "Next Update:"
    stderr:
    - "Response verify OK"
    timeout: 10000 # in milliseconds

  B.3 Test 3:
    title: "Exercise B.3: GET request should return content of VirtualHost B.3.ocsp because client certificate was successfully checked against OCSP"
    exec: 'curl --cert /home/vagrant/clientcrt/fullchain1.pem --key /home/vagrant/clientcrt/privkey1.pem https://{{$domain_name_chapter_b}}:23443/index.html'
    exit-status: 0
    stdout:
    - "This content is only displayed if you authenticate successfully by a client certificate!"
    - "(you connected to webspace of exercise B.3 with OCSP checking)"
    stderr: []
    timeout: 10000 # in milliseconds

  B.3 Test 4:
    title: "Exercise B.3: GET request should return content of VirtualHost B.3.crl because client certificate was successfully checked against CRL"
    exec: 'curl --cert /home/vagrant/client.B3.active.fullchain.crt --key /home/vagrant/client.B3.active.key https://{{$domain_name_chapter_b}}:23444/index.html'
    exit-status: 0
    stdout:
    - "This content is only displayed if you authenticate successfully by a client certificate!"
    - "(you connected to webspace of exercise B.3 with CRL checking)"
    stderr: []
    timeout: 10000 # in milliseconds

# Certificates used in Chapter B
file:
  /etc/letsencrypt/live/{{$domain_name_chapter_b}}/cert.pem:
    title: "Chapter B: Symlink cert.pem"
    exists: true
    owner: root
    group: root
    filetype: symlink
    contains:
    - "-----BEGIN CERTIFICATE-----"
    - "-----END CERTIFICATE-----"
  /etc/letsencrypt/live/{{$domain_name_chapter_b}}/chain.pem:
    title: "Chapter B: Symlink chain.pem"
    exists: true
    owner: root
    group: root
    filetype: symlink
    contains:
    - "-----BEGIN CERTIFICATE-----"
    - "-----END CERTIFICATE-----"
  /etc/letsencrypt/live/{{$domain_name_chapter_b}}/privkey.pem:
    title: "Chapter B: Symlink privkey.pem"
    exists: true
    owner: root
    group: root
    filetype: symlink
    contains:
    - "-----BEGIN PRIVATE KEY-----"
    - "-----END PRIVATE KEY-----"
